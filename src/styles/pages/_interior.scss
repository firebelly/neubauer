/* _interior.scss */

/* ---------------------------------------------------------------------
 Interior-specific  declarations
------------------------------------------------------------------------ */
@use "utils/_utils" as *;
@use "components/__components" as *;
@use "sass:math";

@forward 'project';


/* ---------------------------------------------------------------------
  Interior Intro
------------------------------------------------------------------------ */
.interiorIntro {
	$parent: &;
	padding: 0 8em 5em 8em;
	@include flexParent($display:flex,$values:row nowrap);
	@include justifyContent(center);

	&--people  {
		padding-top: 12em;
		padding-bottom: 16em;
	}

	&--about {
		@include justifyContent(flex-end);
	}

	> * {
		@include flexChild(0 1 50%);
	}

	&-details {
		padding-right: 8em;
		text-align: center;

		#{$parent}--projects & {
			@include breakpoint(sm) {
				@include flexParent($display:flex,$values:column);
			}
		}

        #{$parent}--news & {
			@include breakpoint(sm) {
				flex-basis: 75%;
			}
		}
	}

	&-asset {
		// todo
		overflow: hidden;
	}

	&-placeholder {
		background: lightgray;
		height: 700px;
		width: 640px;
	}

	&-caption {
		$pt: math.div(20,16);
		$pr: math.div(40,16);
		@include getType('caption');
		padding: #{$pt}em #{$pr}em 0 0;
	}

	&-title {
		$mb-lg: math.div(40,65);
		$mb-sm: math.div(20,65);
		@include getType('h1-normal');
		margin-bottom: #{$mb-lg}em;

		#{$parent}--people & {
			margin-bottom: #{$mb-sm}em;
		}

	}

	&-subtitle {
		$mb: math.div(20,16);
		@include getType('caption');
		margin-bottom: #{$mb}em;
		
		&--projects {
			$translate: calc(100% - 2em);
			flex-grow: 1;
			transform: translateY($translate);
		}

	}

	&-prompt {
		$mb: math.div(80,28);
		@include getType('h3-sans');
		margin-bottom: #{$mb}em;
	}

	&-team {
		&-title {
			@include visuallyHide;
		}

		&-list {				
			@include flexParent();
			@include justifyContent(center);
			margin-bottom: 1em;
		}

		&-item {
			@include getType('caption');

			a:link,
            a:visited,
            a:hover,
            a:active {

				#{$parent}--people & {
					color: getColor('blue',10);
				}

				#{$parent}--projects & {
                	color: getColor('green',30);
				}
            }

		}

	}

	&-date {
		@include getType('caption');
	}

	&-menu {
		$menu: &;
		@include flexParent();
		@include justifyContent(center);
		scroll-behavior: smooth; // todo
	
		&--projects {
			flex-grow: 1;
			@include alignItems(end);
		}

		&--about {
			display: block;
		}

		&-item {
			@include flexChild(0 1 auto);
			@include getType('action');
			margin: 0 2em;

			#{$menu}--about & {
				$mb: math.div(20,12);
				margin: 0 0 #{$mb}em 0;
			}

			a:link,
            a:visited,
            a:hover,
            a:active {

				#{$parent}--people & {
					color: getColor('blue');
				}

				#{$parent}--projects & {
					color: getColor('green',30);
				}

				// ew
				#{$parent}--people &,
				#{$parent}--projects & {
					text-decoration: none;
				}

            }
		}

		&-action {
			$action: &;
			@at-root {
				@include actionButton(#{$action},getColor('red'),getColor('red',10));
			}

			&-label {
				pointer-events: none;
			}

		}

	}

}

/* ---------------------------------------------------------------------
 Interior Summary
------------------------------------------------------------------------ */
.interiorSummary {
	$summary: &;
	border-top: 1px solid transparent;
	padding: 4em 4em 16em 4em;

	&--people {
		border-color: getColor('blue');
	}

	&--projects {
		border-color: getColor('green',30);
	}

    &--events {
		border-color: getColor('yellow',10);
	}

	&--about {
		padding: 8em 0 0 0;
		border: none;
	}

	&--exhibitions {
		padding-top: 0;
	}

	@include breakpoint(sm) {
		@include flexParent($display:flex,$values:row nowrap);
		@include justifyContent(center);

		> * {
			@include flexChild(0 1 50%);
		}
	}

	&-title {
		@include getType('h1-normal');

		&--people,
		&--exhibitions,
        &--news,
        &--events {
			@include visuallyHide;
		}
	}

	&-placeholder {
		// width: 100%;
		// height: 100%;
		// background: lightgray; //todo
	}

	&-frame {
		@include breakpoint(sm) {
			margin-right: 4em;
		}
	
		&--projects {
			@include visuallyHide;
		}

		&--exhibitions {
			display: flex;
			@include justifyContent(flex-end);
		}

	}

	&-buttons {

		&--stack {
			width: 50%;
		}

	}

	&-asset {
		@include flexParent();
		@include justifyContent(flex-end);
	}

	&-caption {
		$pt: math.div(20,16);
		$pr: math.div(40,16);
		@include getType('caption');
		padding: #{$pt}em #{$pr}em 0 0;
	}

	&-main {
	
		&--directors {
			flex-basis: 100%;
		}

        #{$summary}--news & {
			flex-basis: 100%;
		}

	}

	&-redactor {
		$mb: math.div(40,24);
		@include getType('subtitle');
		margin: 0 0 #{$mb}em 0;

		a:link,
		a:visited,
		a:hover,
		a:active {
			text-underline-offset: 5px;

			#{$summary}--projects & {
				color: getColor('green',30);
			}
			#{$summary}--people & {
				color: getColor('blue');
			}
            #{$summary}--news & {
				color: getColor('red');
			}
		}	

        h2 {
            @include getType('h1-normal');
            $size: math.div(65,24);
            $mt: math.div(40,65);
            $mb: math.div(20,65);
            font-size: #{$size}em;
            margin: #{$mt}em 0 #{$mb}em 0;
        }

        h3 {
            @include getType('h2-normal');
            $size: math.div(40,24);
            $mt: math.div(40,40);
            $mb: math.div(20,40);
            font-size: #{$size}em;
            margin: #{$mt}em 0 #{$mb}em 0;
        }

        h4 {
            @include getType('h3-normal');
            $size: math.div(30,24);
            $mt: math.div(40,30);
            $mb: math.div(20,30);
            font-size: #{$size}em;
            margin: #{$mt}em 0 #{$mb}em 0;
        }

        em {
			font-style: italic;
		}

        p {
            margin-bottom: #{$mb}em;
        }

        figure {
            position: relative;
            height: 0;
            $mb: math.div(20,16);
            margin-bottom: #{$mb}em;
            padding-bottom: 56.25%;// make it fluid

            // Inline video
            iframe {
                height: 100%;
                width: 100%;
                position: absolute;
                top: 0;
                right: 0;

            }

        }

		&--body {

			&._is-hidden {
				@include visuallyHide;
			}

		}

	}

	&-accordion {
		$accordion: &;
		@include flexParent();
		border-top: 1px solid transparent;
		display: block;
		margin-top: 4em;
		padding: 2em 0;
		width: 100%;
		font-size: 1rem;

		&--projects {
			border-color: getColor('green',30);
		}

		&:link,
		&:visited,
		&:hover,
		&:active {
			color: getColor('green',30);
			text-decoration: none;
		}

		> * {
			@include flexChild(0 1 auto);
		}

		&-label {
			@include getType('h3-sans');
			flex-grow: 1;
		}

		&-icon {
			height: 20px;
			width: 20px;

			#{$accordion}--projects & {
				fill: getColor('green',30);
			}
			
		}
	}

	&-topics {
		$topics: &;
		border-top: 1px solid transparent;
		margin-top:4em;
		font-size: 1rem;

		&--projects {
			border-color: getColor('green',30);

			.panelSummary + & {
				margin-top: 0;
			}

		}

		&--people {
			border-color: getColor('blue');
		}

		&-subtitle {
			$pad: math.div(20,28);
			@include getType('h3-sans');
			padding: #{$pad}em 0;
		}

		@at-root {
			@include controlTags(#{$topics},$default:true,$theme:true);
		}

		&-label {
			@include getType('fine');
		}
	}

	&-action {
		$action: &;
		@at-root {
			@include actionButton(#{$action},getColor('blue'),getColor('blue',10));
		}
		&-label {
			@include getType('action');
		}

		&-icon {
			height: 20px;
			width: 20px;
			fill: getColor('blue');

			#{$summary}-buttons--stack & {
				fill: getColor('gray');
			}
		}

		#{$summary}-buttons--stack & {
			$mb: math.div(20,16);
			display: flex;
			margin-bottom: #{$mb}em;

			&:link,
			&:visited,
			&:hover,
			&:active {
				color: getColor('gray');
				text-decoration-color: getColor('gray');
			}

		}

	}

}

/* ---------------------------------------------------------------------
 Interior Team (project)
------------------------------------------------------------------------ */
@include cardCarousel('.interiorTeam-item',getColor('green',30),getColor('green',30));

.interiorTeam {
	$team: &;
	border-top: 1px solid transparent;
	padding: 4em 4em 16em 4em;

	&--projects {
		border-color: getColor('green',30);
	}

	&-title {
		$mb: math.div(80,65);
		@include getType('h1-normal');
		margin-bottom: #{$mb}em;
	}

	// Cards
	&-list {
		@include breakpoint(sm) {
			@include flexParent();

			> * {
				@include flexChild(0 1 calc(50% - 0.5em));
			}

		}
	}

	&-item {
		padding: 2em 0;

		&-title {
			
			@include getType('h3-sans');

			&--btm {
				@include totallyHide;
			}
		
		}



	}

}

/* ---------------------------------------------------------------------
 Interior Projects (person)
------------------------------------------------------------------------ */
@include cardDirectory('.interiorProjects-item',getColor('blue'),getColor('blue',10));

.interiorProjects {
	$projects: &;
	border-top: 1px solid getColor('blue');
	padding: 4em 4em 16em 4em;

	&-title {
		$mb: math.div(80,65);
		@include getType('h1-normal');
		margin-bottom: #{$mb}em;
	}

	&-list {

		@include breakpoint(sm) {
			@include flexParent();

			> * {
				@include flexChild(0 1 calc(50% - 0.5em));
			}

		}
	}

}

/* ---------------------------------------------------------------------
 Interior Module
 - e.g. About Impact Module
------------------------------------------------------------------------ */
.interiorMod {
	$mod: &;
	border-top: 1px solid transparent;
	padding: 4em 4em 16em 4em;

	&--about {
		border-color: getColor('red');
	}

	&-title {
		@include getType('h1-normal');
	}

	&-subtitle {
		$mv: math.div(20,40);
		$mt: math.div(80,40);
		@include getType('h2-sans');
		border-top: 1px solid getColor('red');
		margin-top: #{$mt}em;
		padding: #{$mv}em 0;
	}

	&-wrap {
		padding-top: 8em;
	}

	&-frame {
		position: relative;

		&--impact {
			width: 100%;
		}

		&-placeholder {
			height: 700px; // todo
			width: 100%;
			background-color: lightgray;
		}

		&-caption {
			@include getType('caption');
			display: block;
			width: 50%;
			position: absolute;
			left: 0;
			top: 100%;

			em {
				font-style: italic;
			}

			strong, b {
				font-weight: bold;
			}

		}

	}

	&-asset {
		display: block;
		padding-bottom: 4em;
	}

	&-main {

		@include breakpoint(sm) {
			@include flexParent();
			@include justifyContent(flex-end);
		}

		&-content {
			@include flexChild(0 1 50%);
		}

	}

	&-redactor {
		$mb: math.div(40,24);
		@include getType('subtitle');
		margin: 0 0 #{$mb}em 0;

		a:link,
		a:visited,
		a:hover,
		a:active {
			text-underline-offset: 5px;

			#{$mod}--about & {
				color: getColor('red');
			}
		}	

		em {
			font-style: italic;
		}
	
		&--body {

			&._is-hidden {
				@include visuallyHide;
			}

		}

	}

    &-matrix {
        @include flexParent();

        @include breakpoint(sm) {
            > * {
                @include flexChild()
            }
        }
    }

	&-card {
		$card: &;
		@at-root {
			@include cardDirectory(#{$card},getColor('red'),getColor('red',10));
		}
        flex-basis: 50%;
	}

	&-metric {
		margin-bottom: 4em;
		max-width: 295px;

		&-stat {
			@include getType('o-normal');
		}

		&-caption {
			@include getType('caption');
		}

	}

    &-list {
		$margin-total: 0.5em;
		
		@include breakpoint(sm) {
			margin-top: 6em;
		}

        &--2 {
            @include flexParent();
            > * {
                @include flexChild(1 1 50%);
            }
        }

        &--4 {

			@include breakpoint(sm) {
				@include flexParent();
				> * {
					@include flexChild(0 1 calc(25% - #{$margin-total}));
				}
			}

        }

        &--3 {

			@include breakpoint(sm) {
				@include flexParent();
				> * {
					@include flexChild(0 1 calc(33.333% - #{$margin-total}));
				}
			}
        }

		&--highlight {
            @include flexParent();

			> * {
				flex-basis: 100%;
			}

			@include breakpoint(sm) {
				> * {
					@include flexChild(1 1 50%);
				}
			}
        }

		&--visit {

			@include breakpoint(sm) {
				
				@include flexParent();
				> * {
					$gap: 4.5;
					$margin: math.div(4.5,2);
					&:nth-child(1) {
						margin-right: #{$margin}em;
					}
					&:nth-child(2) {
						margin-left: #{$margin}em;
					}
					@include flexChild(1 1 calc(50% - #{$gap}em));
				}
			}
		}

    }

	&-map {

	}

	&-directions {
		$mb: math.div(40,24);
		
		> * {
			@include getType('subtitle');
		}

		p {
			margin-bottom: #{$mb}em;
		}

	}

    &-cardlette {
        $cardlette: &;

        @at-root {
            @include cardMini(#{$cardlette},getColor('red'),getColor('red',10));
        }

		// @include flexParent($display:flex,$values:column nowrap);

    }

}

@include accordionMenu('.panelDirections',$icon-size:20px, $default:false);
@include accordionMenu('.panelStatement',$icon-size:20px, $default:false);
.panelStatement,
.panelDirections {

	&-name {
		@include getType('h3-sans');
	}

	&-trigger {
		border-color: getColor('red');
		color: getColor('red');
	}

	&-toggle {
		fill: getColor('red');
	}

	&-content {
		> * {
			@include getType('subtitle');
		}
	}

}

@include accordionMenu('.panelSummary',$icon-size:20px, $default:false);
.panelSummary {

	&-name {
		@include getType('h3-sans');
	}

	&-trigger {
		border-color: getColor('green',30);
		color: getColor('green',30);
	}

	&-toggle {
		fill: getColor('green',30);
	}

	&-content {
		> * {
			@include getType('subtitle');
		}
	}

}


/* ---------------------------------------------------------------------
 Interior Explore
 i.e. feature projects and/or exhibitions
------------------------------------------------------------------------ */
.interiorExplore {
	$explore: &;
	background: getColor('white');

	$explore-colors: (
		(#FF9F99, #934C31,#330805),
		(#6CE8BB, #934C31, #262626)
	);

	@include breakpoint(sm) {
		@include flexParent();
		@include justifyContent(center);
		@include alignItems(center);

		> * {
			@include flexChild(0 1 33.333%);
		}
	}

	&-title {
		@include visuallyHide;
	}

	&-feature {
		$feature: &;
		height: 400px;
		position: relative;
		text-align: center;

		@include breakpoint(sm) {
			height: 600px;
		}

		@for $i from 1 through 2 {

			&:nth-of-type(#{$i}) {
				$color: nth(nth($explore-colors,$i),3);
	
				#{$feature}-label,
				#{$feature}-title,
				#{$feature}-title a {
					color: $color;
				}
				@include actionButton(#{$explore}-action,$color,$color);
				
				#{$explore}-action {
					margin-right: 0;
				}

			}
	
		}

		&--random {
			background: getColor('blue');
			@include flexParent($display:flex,$values:column wrap);
			@include justifyContent(center);
			@include alignItems(center);
		}

		// Overlay Treatment
		&-overlay {
			position: absolute;
			top: 0;
			left: 0;
			height: 100%;
			z-index: 2;
			width: 100%;
			opacity: 0.8;

			@for $i from 1 through 2 {

				#{$feature}:nth-of-type(#{$i}) & {
					background: nth(nth($explore-colors,$i),1);
				}
		
			}

			@include breakpoint(sm) {

				@for $i from 1 through 2 {

					#{$feature}:nth-of-type(#{$i}) & {
						background: nth(nth($explore-colors,$i),2);
					}
			
				}
		
			}
		}

		&-asset {
			bottom: 0;
			position: absolute;
			height: 100%;
			width: 100%;
			left: 0;
			top: 0;
			z-index: 1;
			overflow: hidden;

			&-image {
				object-fit: cover;
				height: 100%;
				width: 100%;
				filter: blur(15px);
				transition: filter 2s ease-in-out;

				#{$feature}:hover & {
					filter: blur(5px);
					transition: filter 2s ease-in-out;
				}
			}
		}

		&-content {
			@include flexParent($display:flex,$values:column wrap);
			@include justifyContent(center);
			@include alignItems(center);
			height: 100%;
			padding: 0 6em;
			position: relative;
			z-index: 2;
		}

		&-label {
			$mb: math.div(20,16);
			@include getType('caption');
			margin-bottom: #{$mb}em;
		}
		&-title {
			$mb: math.div(40,28);
			@include getType('h3-sans');
			margin-bottom: #{$mb}em;
		}
	}

	&-big {

		&:link,
		&:visited,
		&:hover,
		&:active {
			text-decoration: none;
		}

		&-label {
			@include getType('h2-sans');
			color: getColor('white');
		}

		&-icon {
			display: block;
			height: 70px;
			width: 70px;
			fill: getColor('white');
			margin: 0 auto;
		}

	}

}	
