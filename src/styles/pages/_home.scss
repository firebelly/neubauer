/* _home.scss */

/* ---------------------------------------------------------------------
 Homepage-specific  declarations
------------------------------------------------------------------------ */
@use "utils/_utils" as *;
@use "components/__components" as *;
@use "sass:math";

@forward 'project';


/* ---------------------------------------------------------------------
  Homepage
------------------------------------------------------------------------ */
.homepageCover {
	$sm-nav-height: 80px;
	$sm-asset-height: 940px;
	$sm-asset-width: 1441px; //ew
	$sm-cover-height: 820px;
	height: 100vw;
	position: relative;
	overflow: hidden;
	z-index: 1;

	@include breakpoint(sm) {
		height: $sm-cover-height;
		//margin-bottom: -12px; // account for image blur
	}

	&-title {
		padding: 0 2em;
		top: 92px;
		position: relative;
		z-index: 2;
		color: getColor('white');
		transform: translate3d(0,0,0);

		@include breakpoint(sm) {
			width: 900px;
			top: 185px;
			left: 200px;
		}

		&._is-sliding {
			transition: transform 2s ease-in;
		}

	}

	&-tagline {
		$mb: math.div(20,65);
		@include getType('h1-normal');
		margin-bottom: #{$mb}em;
		text-align: center;

		em {
			font-family: $font-tertiary;
			font-style: italic; //todo
			letter-spacing: -0.03em;
		}

		@include breakpoint(sm) {
			$mb: math.div(20,120);
			@include getType('o-normal');
			text-align: left;
		}
		
	}

	&-prompt {
		@include getType('caption');
		text-align: center;

		@include breakpoint(sm) {
			width: 600px;
			@include getType('subtitle');
			text-align: left;
		}
	}

	&-asset {
		// todo
		height: 100%;
		width: 100%;
		top: 0;
		left: 0;
		position: fixed;
		background-repeat: no-repeat;
		background-position: 50% 50%;
		background-size: cover;
		background-blend-mode: multiply;
		background-attachment: fixed;
		filter: blur(15px);
		transform: translate3d(0,0,0);

		@include breakpoint(sm) {
			height: $sm-asset-height;
			width: $sm-asset-width;
		}

		&._is-sliding {
			filter: blur(0);
			transition: transform 2s ease-in, filter 2s ease-in;
		}

	}

	&-action {
		$action: &;
		@include resetButton;
		

		@at-root {
			@include actionButton(#{$action},getColor('white'),getColor('white'));
		}
		
		&--ghost {
			display: block;
			margin: 4em auto 0 auto;
			background: transparent;

			@include breakpoint(sm) {
				margin-left: 0;
				margin-right: 0;
			}

		}

		&-label {
			@include visuallyHide;
		}

		&-icon {
			margin-left: 0;
			height: 20px;
			width: 20px;
		}

	}

}

// TODO: rename this
.homepageFeature {
	$feature: &;
	@include flexParent($display:flex,$values:row nowrap);
	@include justifyContent(center);
	@include alignItems(center);
	// TODO: fix these dims
	height: calc(100vw - 8em);
	width: calc(100vw - 8em);
	top: 100%;
	left: 4em;
	position: absolute;
	z-index: 2;
	transform: translate3d(0,0,0);
	background: getColor('green',30);
	color: getColor('green',20);
	font-size: 1rem;
	text-align: center;

	&._is-sliding {
		transition: transform 2s ease-in;
	}

	@include breakpoint(sm) {
		height: 675px;
		width: 675px;
		left: auto;
		right: 4em;
		padding: 0 8em;
	}

	&-label {
		$mb: math.div(20,16);
		@include getType('caption');
		margin-bottom: #{$mb}em;
	}

	&-title {
		$mb: math.div(20,40);
		@include getType('h3-sans');
		margin-bottom: #{$mb}em;
		text-align: center;
	}

	&-question {
		$mb: math.div(20,40);
		@include getType('h3-italic');
		margin-bottom: #{$mb}em;
		text-align: center;
	}

	@include actionButton(#{$feature}-action,getColor('green',20),getColor('green',20));

	&-action {
		#{$feature} & {
			margin-right: 0;
		}
	}

}


.homepageEntries {
	$entries: &;
	padding: 4em 0 4em 4em;
	position: relative;
	z-index: 2; // obfuscate the parallax cover

	&--people {
		background: getColor('blue',10); 
	}

	&--events {
		background: getColor('yellow'); 
	}

	&--news {
		background: getColor('red',10);
	}

	&-intro {
		margin-bottom: 6em;

		@include breakpoint(sm) {
			@include flexParent();
			margin-bottom: 8em;
			padding-right: 12em;
			
			> * {
				@include flexChild(0 1 50%);
			}
		}
	}

	&-title {
		$mb: math.div(20,65);
		@include getType('h1-normal');
		margin-bottom: #{$mb}em;

		#{$entries}--people & {
			color: getColor('blue');
		}

		#{$entries}--news & {
			color: getColor('red');
		}

		@include breakpoint(sm) {
			margin-bottom: 0;
		}
		
	}

	&-body {
		$mb: math.div(20,16);
		@include getType('subtitle');
		margin-bottom: #{$mb}em;

		#{$entries}--people & {
			color: getColor('blue');
		}
	}

	&-list {
		@include flexParent();

		> * {
			@include flexChild(0 1 30%);
		}

	}

	&-action {
		$action: &;

		@at-root {
			#{$entries}--events {
				@include actionButton(#{$action},getColor('yellow',10),getColor('yellow'));
			}
			#{$entries}--people {
				@include actionButton(#{$action},getColor('blue'),getColor('blue',10));
			}
		}

	}


}

/* ---------------------------------------------------------------------
  Carousels
------------------------------------------------------------------------ */
@include carouselScroller('.homepageCarousel');
@include cardCarousel('.peopleSlide',getColor('blue'),getColor('blue',10));
@include cardCarousel('.eventsSlide',getColor('yellow',10),getColor('yellow'));
@include cardCarousel('.newsSlide',getColor('red'),getColor('red',10));
@include cardMiniFeature('.homepageFeatures',getColor('black'));

.homepageExplore {
	// eh, some calculation is off 
	// and this covers an exposed sliver
	position: relative;
	top: 1em;
}

.homepageFeatures {
	$features: &;
	z-index: 10;	
	background: getColor('white');

	// height: 640px;
	// width: 265px;

	$feature-colors: (
		(#FF9F99,#330805),
		(#E5B760, #1A150D),
		(#DED8CC, #4D3608),
		(#1E1E1E, #FFFFFF),
		(#FFFFFF, #151515)
	);

	@for $i from 1 through 5 {

		&:nth-child(#{$i}) {
			background: nth(nth($feature-colors,$i),1);
			
			#{$features}-label,
			#{$features}-title,
			#{$features}-title a,
			#{$features}-question {
				color: nth(nth($feature-colors,$i),2);
			}
		}

	}

	&-title {

		a:link,
		a:visited,
		a:active {
			text-decoration: none;
		}

		a:hover {
			text-decoration: underline;
		}
	}

	&-content {
		padding: 2em 2em 4em 2em;
		position: relative;
		z-index: 2;
	}

	&-action {

		&--call {
			margin-right: 0;
		}

		@for $i from 1 through 5 {

			#{$features}:nth-child(#{$i}) & {
				$color: nth(nth($feature-colors,$i),2);
				border-color: $color;
				
				&-label {
					color: $color;
				}
				&-icon {
					fill: $color;
				}
			}

			#{$features}:nth-child(#{$i}) &:hover {
				&-label {
					color: getColor('white');
				}
				&-icon {
					fill: getColor('white');
				}
			}

		}
	}

	// Overlay Treatment
	&-overlay {
		@include breakpoint(sm) {
			position: absolute;
			top: 0;
			left: 0;
			height: 100%;
			z-index: 2;
			width: 100%;
			opacity: 0.8;

			@for $i from 1 through 5 {

				#{$features}:nth-child(#{$i}) & {
					$bg: nth(nth($feature-colors,$i),1);
					background: $bg;
				}
			}
		}
	}

	&-asset {

		@include breakpoint(sm) {
			bottom: 0;
			position: absolute;
			height: 100%;
			width: 100%;
			left: 0;
			top: 0;
			z-index: 1;
			overflow: hidden;

			&-image {
				object-fit: cover;
				height: 100%;
				width: 100%;
				filter: blur(15px);
				transition: filter 2s ease-in-out;

				#{$features}:hover & {
					filter: blur(5px);
					transition: filter 2s ease-in-out;
				}
			}

		}

	}

}

.homepageCarousel {
	$carousel: &;

	&--features {
		margin-bottom: 0;	
		// Camoflauge the scroll
		background-color: getColor('blue',10);
	}

	&-button,
	&-nav {

		#{$carousel}--features & {
			@include totallyHide;
		}
	}

	&-slides {

		#{$carousel}--features & {
			padding-bottom: 0;
			padding-right: 0;

			@include breakpoint(sm) {
				height: 820px;
			}

		}

		@include breakpoint(sm) {
			> * {
				width: calc(50% - 12em);
			}
		}
	}

}


