/* project.scss */

/* ---------------------------------------------------------------------
 Project-specific generic element declarations
------------------------------------------------------------------------ */
@use "utils/_utils" as *;
@use "components/__components" as *;
@use "sass:math";

* {
	box-sizing: border-box;
}

html {
	font-size: 62.5%; // Reset base font size for easier em & rem calculations: 1em = 10px
	-webkit-overflow-scrolling: touch;
	scroll-behavior: smooth;
	min-height: -webkit-fill-available;
	background: black; // TODO
}

body {
	$max: map-get($breakpoints,'xl');
	max-width: #{$max};
	min-height: -webkit-fill-available;
	overflow-x: hidden;
	background: getColor('white');
	color: getColor('black');
	font-family: $font-secondary;
	-webkit-font-smoothing: antialiased;
	-webkit-overflow-scrolling: touch;

	@include breakpoint(md) {
		//font-size: 200%;
	}

	@include breakpoint(lg) {
		//font-size: 150%;
	}

	@include breakpoint(xl) {
	}

}

h1, h2, h3, h4, h5, h6 {
	margin: 0;
	font-weight: normal;
}

ol, ul {
	margin: 0;
	padding: 0;
}

p {
	margin: 0;
}

img {
	display: block;
	max-width: 100%;
}

.viewportMod {
	&._is-debug::before {
		font-size: 1.1em;
	}
}

.svg-defs {
	&._is-hidden {
		display: none;
	}
}

/* ---------------------------------------------------------------------
  Dev Testing Mod
------------------------------------------------------------------------ */
.devTesting {
	display: none;

	&._is-debug {
		display: block;
		position: fixed;
		top: 0;
		left: 0;
		padding: 1em;
		background: red;
		color: white;
		font-weight: bold;
		width: 50%;
		display: none;
	}
	
}

/* ---------------------------------------------------------------------
  Accessibility Skip
------------------------------------------------------------------------ */
.skip-link {
	background: getColor('black');
	color: getColor('white');
	font-weight: 700;
	left: 50%;
	padding: 4px;
	position: absolute;
	transform: translateY(-100%);
}
  
.skip-link:focus {
	transform: translateY(0%);
}

.skip-link:focus-within {
	transform: translateY(0%);
}

/* ---------------------------------------------------------------------
  Initialize common components

  Example:
  @include accordionMenu($selector:'.myAccordion',$icon-size:20px,$default:true);
------------------------------------------------------------------------ */
@include assetItem('.profileAsset');
// @include controlTags('.searchTags');
@include flyoutContent('.primaryNav');
@include fieldSearch('.primarySearch');

/* ---------------------------------------------------------------------
  Icons
------------------------------------------------------------------------ */
@mixin icon {
	// default icon sizing
	height: 20px;
	width: 20px;
}

/* ---------------------------------------------------------------------
  Theme
------------------------------------------------------------------------ */
// Themed body class
.primaryTheme {

	@each $pg, $color in $pages {
		$theme: getTheme($color);

		&--#{$pg} {
			$theme-primary: nth($theme,1);
			$theme-secondary: nth($theme,2);

			background: $theme-secondary;
			color: $theme-primary;

			@include controlPagination('.searchPagination',$theme-primary,$theme-secondary);

			// Primary selectors
			.primaryHeader {

				&-icon {
					fill: $theme-primary; 
				}

			}

			.primaryNav {
				$selector: &;

				&-trigger {
					&--open {
						color: $theme-primary;
						#{$selector}-trigger-icon {
							fill: $theme-primary;
						}
					}
					&-icon {
						fill: $theme-primary;
					}
				}

				&-content {
					@include breakpoint(sm) {
						color: $theme-primary;
					}
				}
			}

			.primarySearch {

				&-submit {
					&-icon {
						@include breakpoint(sm) {
							fill: $theme-primary;
						}
					}
				}

			}

			.primaryPages {

				&-trigger {
					@include breakpoint(sm) {
						color: $theme-primary;
					}
				}

			}

			.searchTabs {

				&-trigger {
					color: $theme-primary;
				}

			}

			

		}

	}

}

/* ---------------------------------------------------------------------
  Global Container Placeholders
  eh these are kinda dum
------------------------------------------------------------------------ */
%global {

	&-half {
		@include breakpoint(sm) {
			max-width: 50%;
		}
	}

	&-flex--auto {
		@include breakpoint(sm) {
			@include flexParent();
			> * {
				@include flexChild();
			}
		}
	}


	&-flex--half {
		@include breakpoint(sm) {
			@include flexParent();
			> * {
				@include flexChild(0 1 50%);
			}
		}
	}

}

%gutter {
	padding: 4em;
}



/* ---------------------------------------------------------------------
  Primary Content
------------------------------------------------------------------------ */
.primaryContent {
	//padding: 2em 0 8em 0;
	position: relative;
	z-index: 1; // ensure mobile nav overlays

	padding: 2em 0 0 0;

	&--homepage {
		padding-top: 0;
	}

}

/* ---------------------------------------------------------------------
  Index Pages
------------------------------------------------------------------------ */
.openerImage {
	$image: &;

	@at-root {
		@include assetItem(#{$image});
	}

	margin: 0 4em;

}

.pageOpener {
	$opener: &;
	@extend %gutter;

	@include breakpoint(sm) {
		@include flexParent();

		> * {
			@include flexChild(0 1 50%);
		}	
	}

	&--search {
		padding: 0;
	}

	&--exhibitions,
	&--research {
		padding-bottom: 6em;

		@include breakpoint(sm) {
			padding-bottom: 16em;
		}

	}

	&-title {
		$p: math.div(20,120);
		@include getType('o-normal');
		padding: 0 #{$p}em 0 0;

		&--search {
			$pr: math.div(40,65);
			@include getType('h1-normal');
			padding-right: #{$pr}em;
		}

		#{$opener}--exhibitions & {
			$pb: math.div(20,40);
			@include getType('h2-normal');
			padding: 0 0 #{$pb}em 0;

			@include breakpoint(sm) {
				@include getType('o-normal');
			}

		}

	}

	&-desc {
		$p: math.div(20,24);
		@include getType('subtitle');
		//padding-left: #{$p}em;
	}
	
}

/* ---------------------------------------------------------------------
  Search Index
------------------------------------------------------------------------ */
.searchOpener {
	@extend %gutter;

	&-title {
		@include getType('h4-sans');
		margin-bottom: 1em;			
	}

	&-form {
		@extend %global-half;
		margin-top: 12em;
	}
	
}

/* ---------------------------------------------------------------------
  Search Index Form
------------------------------------------------------------------------ */
.indexSearch {
	$search: &;

	@at-root {
		@include fieldSearch(#{$search});
	}

	&-field {

		&-input {
			background-color: getColor('red',30);
			border-color: getColor('red');
			color: getColor('red');

			&::placeholder {
				color: getColor('red');
			}

		}

	}

	&-submit {
		@include flexParent();
		@include alignItems(center);
		border-color: getColor('red');

		&-label {
			$mr: math.div(10,12);
			@include getType('micro');
			margin-right: #{$mr}em;
			color: getColor('red');
			text-transform: uppercase;	
		}

		&-icon {
			fill: getColor('red');
		}

	}

}



/* ---------------------------------------------------------------------
  Date Directory - dev only
------------------------------------------------------------------------ */
.dateDirectory {
	font-size: 1rem;

	&-title {
		@include getType('h3-normal');
		margin-bottom: 1em;
	}

	&-list {
		font-size: 1rem;
		margin-bottom: 2em;
	}

	&-name {
		@include getType('p');
		font-weight: bold;
	}

}

/* ---------------------------------------------------------------------
  Person
------------------------------------------------------------------------ */
.contentContainer {
	font-size: 1rem;
	max-width: 1440px;
	padding: 2em;

	@include breakpoint(md) {
		padding: 4em;
	}

}

.profileContainer {

	@include breakpoint(md) {
		@include flexParent($display:flex, $values:row nowrap);
		@include alignItems(flex-start);
		padding-right: 12em;
		gap: 4em;

		> * {
			@include flexChild(0 1 50%);
		}
	}
}

.profileAsset {

	&--interior {
		@include breakpoint(md) {
			//padding-right: 4em;
		}	
	}
}

.profileBody {
	font-size: 2.4em;
}



.interiorCover {

	&-frame {
		margin: 0 4em;
	}

	&-placeholder {
		width: 1360px;
		height: 700px;
		background:lightgray;
	}

	&-caption {
		$pt: math.div(40,16);
		@include getType('caption');
		padding: #{$pt}em 0 0 0;
	}

}

.interiorSpotlight {
	background:  #51594A; //todo
	height: 900px;
	@include flexParent($display:flex,$values:column nowrap);
	@include justifyContent(center);

	> * {
		@include flexChild();
	}

	* {
		color: getColor('green',20);
	}

	&-subtitle {
		$mb: math.div(20,30);
		@include getType('h3-sans');
		margin-bottom: #{$mb}em;
		text-align: center;
	}

	&-list {
		@include flexParent($display:flex,$values:row nowrap);
		@include justifyContent(center);
		@include alignItems(center);
		text-align: center;
	}

	&-item {
		@include getType('h1-italic');
		
		font-style: italic;
		max-width: 810px;

	}

}

.interiorNarrative {
	$narrative: &;
	border-top: 1px solid transparent;
	padding: 4em 4em 16em 4em;

	&--projects {
		border-color: getColor('green',30);
	}

	&--exhibitions {
		border-color: getColor('gray');
	}

	&-title {
		$mb: math.div(80,65);
		@include getType('h1-normal');
		margin-bottom: #{$mb}em;
	}
}	


.interiorRelated {

	&-title {
		&--hidden {
			@include visuallyHide;
		}
	}
}

/* ---------------------------------------------------------------------
  Narratives Tabs
------------------------------------------------------------------------ */
.tabList {
	$tabs: &;
	@include flexParent;
	border-bottom: 1px solid transparent;
	margin-bottom: 4em;

	&--projects {
		border-bottom-color: getColor('green',30);
	}

	&--exhibitions {
		border-bottom-color: getColor('black',10);
	}

	&-item {
		@include resetButton;
		$pb: math.div(10,28);
		$mr: math.div(40,28);
		@include getType('h3-sans');
		border-bottom: 10px solid transparent;
		padding-bottom: #{$pb}em;
		margin-right: #{$mr}em;

		
		&:hover,
		&[role="tab"][aria-selected="true"] {
			#{$tabs}--projects & {
				border-bottom-color: getColor('green',30);
			}
			#{$tabs}--exhibitions & {
				border-bottom-color: getColor('black',10);
			}
		}

		&:hover {
			cursor: pointer;
		}

		#{$tabs}--projects & {
			color: getColor('green',30);
		}

	}
}

.tabPanel {
	$tab-panel: &;
	@include flexParent();

	&[role="tabpanel"]._is-hidden {
		display: none;
	}

	&-item {
		// TODO: fix spacing
		$panel-item: &;
		@include flexChild(0 1 calc(33% - 0.5em));

		#{$tab-panel}--4 & {
			@include flexChild(0 1 calc(25% - 0.5em));
		}

		@at-root {
			@include cardDirectory(#{$panel-item},getColor('gray'),getColor('gray',10));
	
		}
	}
}

/* ---------------------------------------------------------------------
  Gallery
------------------------------------------------------------------------ */
.interiorGallery {
	$gallery: &;
	border-top: 1px solid transparent;
	padding: 4em 4em 16em 4em;

	&--exhibitions {
		border-color: getColor('gray');
	}

	&-title {
		$mb: math.div(80,65);
		@include getType('h1-normal');
		margin-bottom: #{$mb}em;
	}

}	
