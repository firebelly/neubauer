/* _controls.scss */
@use "../utils/_utils" as *;
@use "sass:math";

/* ---------------------------------------------------------------------
  Select Control: Structure
  See templates/macros/_controls.html for markup
------------------------------------------------------------------------ */
@mixin controlSelect($selector,$icon-size:20px,$default:true) {
    // TODO: 
    // 1. integrate JS to get this the rest of the way for WCAG
    $transition: 280ms all 120ms ease-out;
    $border-size: 1px;

    #{$selector} {
        font-size: 1rem;
        
        &-title {
            margin: 0 0 1em 0;
        }

        &-container {
            display: grid;
            place-items: start;
        }

        &-list {
            display: grid;
            grid-auto-flow: column;
            margin: 0;
            padding: 0;
            list-style: none; 
        }   

        &-dropdown {
            margin: 0 2em 0 0;
            position: relative;
        }        

        &-button {
            @include resetNativeButton;
            @include alignItems(center);
            border: $border-size solid transparent;
            display: inline-flex;
            padding: 0.8em 1.5em;
            transition: $transition;
            
            #{$selector}-dropdown:hover & {
                border-bottom: none;
            }
        }

        &-label {
            padding: 0 3em 0 0;
        }

        &-menu {
            border: $border-size solid transparent;
            border-top: none;
            min-width: 15ch;
            width: 100%;
            padding: 1em 2em;
            position: absolute;
            top: calc(100% - 1em);
            left: 50%;
            transform: rotateX(-90deg) translateX(-50%);
            transform-origin: top center;
            transition: $transition;
            opacity: 0.3;
            visibility: hidden;
            z-index: 2;
    
            #{$selector}-dropdown:hover & {
                opacity: 1;
                transform: rotateX(0) translateX(-50%);
                visibility: visible;
            }

        }

        &-icon {
            display: inline-block;
            height: $icon-size;
            width: $icon-size;
        }

        &-item {
            
            a:link,
            a:visited,
            a:hover,
            a:active {
                display: block;
            }

        }

    }

    @if $default != false {
		@include controlSelect--default($selector);
	}

}

/* -------------------------------------------------------------------------------
 Select Control: Default Presentation
---------------------------------------------------------------------------------- */
@mixin controlSelect--default($selector) {
    $default-color: getColor('black');
    $border-radius: 10px;
    $border-default-color: getColor('black');
    $menu-default-bg: getColor('white');

    #{$selector} {
        
        &-button {
            border-color: $default-color;
            border-radius: $border-radius;
            background: none;

            #{$selector}-dropdown:hover & {
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
            }
        }

        &-menu {
            border-color: $border-default-color;
            border-bottom-right-radius: $border-radius;
            border-bottom-left-radius: $border-radius;
            background: $menu-default-bg;
        }

        &-item {
            
            a:link,
            a:visited,
            a:hover,
            a:active {
                color: $default-color;
                text-decoration: none;
            }

        }


    }

}

/* -------------------------------------------------------------------------------
 Sort Control: Structure
---------------------------------------------------------------------------------- */
@mixin controlSort($selector,$icon-size: 20px,$default:true) {
    $border-size: 2px;

    #{$selector} {

        &-title {
            margin: 0 0 1em 0;
        }

        &-trigger {
            @include flexParent();

            &:link,
            &:visited,
            &:hover,
            &:active {
                text-decoration: none;
            }
        }

        &-label {
            position: relative;

            &::after {
                content: "";
                width: 100%;
                bottom: 0;
                left: 0;
                position: absolute;
                border-bottom: $border-size solid transparent;
            }
        }

        &-icon {
            @include flexChild();
            height: $icon-size;
            width: $icon-size;
        }

    }

    @if $default != false {
		@include controlSort--default($selector);
	}

}

/* -------------------------------------------------------------------------------
 Sort Control: Default Presentation
---------------------------------------------------------------------------------- */
@mixin controlSort--default($selector) {
    $action-default-color: getColor('blue');

    #{$selector} {

        &-trigger {
            &:link,
            &:visited,
            &:hover,
            &:active {
                color: $action-default-color;
            }
        }

        &-label {
            &::after {
                border-bottom-color: $action-default-color;
            }
        }

        &-icon {
            fill: $action-default-color;
        }

    }

}


/* -------------------------------------------------------------------------------
 Layout Control: Structure
---------------------------------------------------------------------------------- */
@mixin controlLayout($selector,$height:25px,$width:25px,$icon-size:20px,$default:true) {

    $border-size: 2px;
    $radio-size: 15px;
    $color: getColor('black',10);
    $triggerThreshold: 250%;

    #{$selector} {

        &-title {
            margin: 0 0 1em 0;

            &--right {
                text-align: right;
            }
        }
        
        &-list {
            @include flexParent();
        }
        
        &-item {
            @include flexParent();
            @include flexChild();
            @include alignItems(center);

            &:not(:first-child)::before {
                content: '';
                border-left: 1px solid transparent;
                height: 16px;
                margin: 0 0 0 1em;
                padding: 0 0 0 1em;
            }
        }

        &-name {
            margin: 0 0 0 0.5em;
        }

        &-control {
            height: $height;
            margin: 0.2em;
            width: $width;
            position: relative;

            &-input, &-label {
                display: block;
                height: 100%;
                width: 100%;
                left: 0;
                top: 0;
            }

            &-input {
                width: $triggerThreshold;
                opacity: 0;
                z-index: 2;
                position: absolute;

                &:checked + #{$selector}-label--faux {
                    height: calc(100% - #{$border-size});
                    width:  calc(100% - #{$border-size});

                    &::after {
                        display: block;
                        content: '';
                        height: $radio-size;
                        width: $radio-size;
                        position: relative;
                        top: 3px;
                        left: 3px;
                        border-radius: 100%;
                    }

                }

                &:hover {
                    cursor: pointer;
                }

            }

            &-label {
                z-index: 1;
                position: relative;
                
                &--faux {
                    border: $border-size solid transparent;
                    border-radius: 100%;
                }

            }

            &-icon {
                display: inline-block;
                height: $icon-size;
                width: $icon-size;
                fill: black;

                #{$selector}-label--faux & {
                    @include totallyHide;
                }

            }


            &-ghost {
                @include visuallyHide;
            }

        }
    }

    @if $default != false {
		@include controlLayout--default($selector);
	}

}

/* -------------------------------------------------------------------------------
 Layout Control: Default Presentation
---------------------------------------------------------------------------------- */
@mixin controlLayout--default($selector) {

    $item-border-color: getColor('gray',10);
    $label-border-color: getColor('black',10);
    $bg-color: getColor('black',10);

    #{$selector} {

        &-item {
            &:not(:first-child)::before {
                border-left-color: $item-border-color;
            }
        }

        &-input {
            &:checked + #{$selector}-label--faux {
                &::after {
                    background: $bg-color;
                }
            }
        }

        &-label {
            &--faux {
                border-color: $label-border-color;
                background-color: transparent;
            }
        }

        &-icon {
            display: inline-block;
            height: $icon-size;
            width: $icon-size;
            fill: black;

            #{$selector}-label--faux & {
                @include totallyHide;
            }
        }

    }

}

/* -------------------------------------------------------------------------------
 Pagination Control: Structure
---------------------------------------------------------------------------------- */
@mixin controlPagination($selector,$color-primary:#000,$color-secondary:#FFF,$icon-size:20px,$default:true) {
    $border-page-size: 1px;
    $border-nav-size: 2px;
    $border-num-size: 1px;

    #{$selector} {
        @include flexParent();
        @include justifyContent(center);
        margin: 2em 0 0;
        width: 100%;
        
        @include breakpoint(md) {
            width: auto;
        }

        &-group {
            @include flexParent();
            @include flexChild();
            @include alignItems(center);
            margin: 0 0 2em 0;

            &--direction {
                @include breakpoint(md) {
                    margin: 0;
                }
            }

            &--pages {
                position: relative;
                padding: 0 0.5em;

                @include breakpoint(md) {
                    padding: 0 1.5em;
                    margin: 0 1.2em;
                
                    &::before,
                    &::after {
                        content: '';
                        position: absolute;
                        border-left: $border-page-size solid transparent;
                        height: 100%;
                    }
                    &::before {
                        left: 0;
                    }
                    &::after {
                        right: 0;
                    }
                }

            }

            li {
                @include flexChild();
            }

        }

        &-nav {
            $parent: &;
            @include flexParent;
            margin: 0 0.8em 0 0;
            padding-right: 2em;
            position: relative;

            > * {
                @include flexChild;
            }

            @include breakpoint(md) {
                margin: 0 0 0 0.8em;
            }

            &._is-inactive {
                pointer-events: none;

                &:hover {
                    cursor: default;
                }
            }

        }

        &-num {
            margin: 0 0.5em;

            &._is-inactive {
                pointer-events: none;
            }

        }

        &-icon {
            height: $icon-size;
            width: $icon-size;
            margin-left: 1em;
        }
    
    }

    @if $default != false {
		@include controlPagination--default($selector,$color-primary,$color-secondary);
	}

}

/* -------------------------------------------------------------------------------
 Pagination Control: Default Presentation
---------------------------------------------------------------------------------- */
@mixin controlPagination--default($selector,$color-primary,$color-secondary) {

    #{$selector} {

        &-nav {
            $parent: &;
            @include getType('action'); 
            color: $color-primary;

            &:link,
            &:visited,
            &:hover,
            &:active {
                text-decoration: underline;
                text-underline-offset: 4px;
            }

            &._is-inactive {
                text-decoration-color: transparent;
            }

        }

        &-num {
            @include getType('p'); 
            color: $color-primary;

            &:link,
            &:visited,
            &:hover,
            &:active {
                text-decoration: none;
            }

            &._is-inactive {
                text-decoration: underline;
                text-underline-offset: 2px;
            }

        }

        &-icon {
            fill: $color-primary;

            #{$selector}-nav._is-inactive & {
                
            }

        }

    }

}

/* ---------------------------------------------------------------------
  Tags
------------------------------------------------------------------------ */
@mixin controlTags($selector,$color-primary:#000000,$color-secondary:#FFFFFF,$default:true) {

    #{$selector} {
        $gutter-a: math.div(5,14); 
        $gutter-b: math.div(10,14);

        &-list {
            @include flexParent();
        }

        &-item {
            @include flexChild();
            margin: 0 1em 1em 0;
            position: relative;
            
            &:hover {
                cursor: pointer;
            }
        }

        &-trigger {

            &--tag {
                border-radius: 100px;
                border: 1px solid transparent;
                padding: 0.5em 1em; 
                font-size: 1rem;
            }

        }

        &-icon {

            &--remove {
                margin-left: #{$gutter-a}em;
            }

        }
        
        

    }

    @if $default != false {
        @include controlTags--default($selector,$color-primary,$color-secondary);
      }

}

/* -------------------------------------------------------------------------------
 Tag Control: Default Presentation
---------------------------------------------------------------------------------- */
@mixin controlTags--default($selector,$color-primary,$color-secondary) {
    
    #{$selector} {

        &-trigger {

            &--tag { 
                border-color: $color-primary;
                z-index: 1;

                &,
                &:link,
                &:visited,
                &:hover,
                &:active {
                    color: $color-primary;
                    text-decoration: none;
                    
                    // Color styles applied to a trigger
                    // whose parent item is hovered AND/OR
                    // whose previous sibling is a checked input AND/OR
                    // whose parent item is active
                    #{$selector}-input--faux:checked + &,
                    #{$selector}-item._is-active &,
                    #{$selector}-item:hover & {
                        color: $color-secondary;
                        background: $color-primary;
                    }

                }

            }
        }

        &-input {
            
            &--faux {
                height: 100%;
                width: 100%;
                padding: 0;
                margin: 0;
                left: 0;
                right: 0;
                position: absolute;
                opacity: 0;
                z-index: 2;

                &:hover {
                    cursor: pointer;
                }

            }
        }

        &-label {

            &--tag {
                @include getType('fine');
            }

        }

        &-icon {

            &--remove {
                fill: $color-secondary;
                display: none;
                // Show remove icon if checked input OR active item
                #{$selector}-input--faux:checked + #{$selector}-trigger &,
                #{$selector}-item._is-active & {
                    display: inline-flex;
                }

            }

        }

    }
}


/* ---------------------------------------------------------------------
  Dialog
------------------------------------------------------------------------ */
@mixin controlDialog($selector,$color-primary:#000000,$color-secondary:#FFFFFF,$default:true) {

    @include controlTags($selector,$color-secondary,$color-primary);

    %trigger--open {
        $pt: math.div(12,16);
        $pl: math.div(15,16);
        $pr: math.div(15,16);
        $pb: math.div(13,16);
        $mb: math.div(20,16);
        @include resetButton;
        @include getType('caption');
        border-radius: 2px;
        border: 1px solid $color-primary;
        margin-bottom: #{$mb}em;
        padding: #{$pt}em #{$pr}em #{$pb}em #{$pl}em;
        width: 100%;
        color: $color-primary;
    
        @include breakpoint(sm) {
            margin-bottom: 0;
            width: auto;
        }
    
    }

    #{$selector} {
        $parent: &;
        
        &-dialog,
        &-overlay {
            top: 0; 
            right: 0; 
            bottom: 0; 
            left: 0; 
            position: fixed;
        }

        &-dialog {
            z-index: 2;
            display: flex;
            overflow-y: scroll;

            @include breakpoint(sm) {
                overflow-y: auto;
            }

            &[aria-hidden="true"] {
                display: none; 
            }

        }

        &-overlay {
            background-color: rgba(43, 46, 56, 0.9);
        }

        &-content {
            padding: 2em;
            background: $color-primary;
            position: relative;
            margin: auto;
            width: 100%;
            z-index: 2; 
            box-shadow: 0px 2px 30px rgba(0, 0, 0, 0.5);
            
            @include breakpoint(sm) {
                width: 75%;
            }

        }

        &-group {
            margin: 0 0 3em 0;

            &--sections {
                @include breakpoint(sm) {
                    display: none;
                }
            }

        }

        &-controls {
            margin-bottom: 2em;

            @include breakpoint(sm) {
                @include flexParent();
                @include justifyContent(space-between);

                > * {
                    @include flexChild(0 1 50%);
                }
            }

        }

        &-trigger {
            @include flexParent();
            @include alignItems(center);

            &:hover {
                cursor: pointer;
            }

            #{$parent}-controls & {
                @extend %trigger--open;
            }

            &--close,
            &--clear,
            &--apply {
                @include resetButton;
            }

            &--sort {
                @include breakpoint(sm) {
                    flex-basis: auto;
                    min-width: 280px;
                }
            }

            &--apply {
                border-radius: 5px;
                border: 1px solid $color-secondary;
                margin-left: 2em;
                padding: 1.5em 2em 1.5em 2em;
            }

            &--close {
                position: absolute;
                top: 1.5em;
                right: 1em;
                font-size: 1rem;
            }

            &:hover {
                cursor: pointer;
            }

        }

        &-icon {
            height: 20px;
            width: 20px;
            @include flexChild();

            #{$parent}-controls & {
                fill: $color-primary;
            }

            &--plus {

                #{$parent}-trigger--filter & {
                    display: none;

                    @include breakpoint(sm) {
                        display: inline-block;
                    }
                }
                
            }

            &--caret {

                #{$parent}-trigger--filter & {
                    @include breakpoint(sm) {
                        display: none;
                    }
                }

            }

            &--apply,
            &--close {
                fill: $color-secondary;
            }

        }

        &-title {

            &--headline {
                $mb: math.div(40,20);
                @include getType('h4-sans');
                margin-bottom: #{$mb}em;
                color: $color-secondary;
            }

            &--group {
                $mb: math.div(15,16);
                @include getType('caption');
                margin-bottom: #{$mb}em;
                color: $color-secondary;
            }
        }

        &-label {

            &--headline {
                flex-grow: 1;
                text-align: left;
            }

            &--action {
                $height: math.div(5,12);
                $width: math.div(10,12);
                @include getType('action');
                margin-right: #{$width}em;
                color: $color-secondary;
                text-decoration: underline;
                text-decoration-color: $color-secondary;
                text-underline-offset: #{$height}em;
                text-decoration-thickness: 1px;

                #{$parent}-trigger--apply & {
                    text-decoration: none;
                }

            }

        }

        &-footer {
            @include flexParent();
            @include justifyContent(flex-end);
            @include alignItems(center);
        }

    }

    @if $default != false {
        @include controlDialog--default($selector,$color-primary,$color-secondary);
    }

}


/* -------------------------------------------------------------------------------
 Dialog Control: Default Presentation
---------------------------------------------------------------------------------- */
@mixin controlDialog--default($selector,$color-primary,$color-secondary) {
    
    #{$selector} {
    
    }

}