/* _actions.scss */
@use "../utils/_utils" as *;
@use "sass:string";
@use "sass:math";

/* ---------------------------------------------------------------------
  Action Button: Structure
  See templates/macros/_actions.html for markup
------------------------------------------------------------------------ */
@mixin actionButton($selector,$color-primary,$color-secondary,$icon-size:20px,$default:true) {
    $v-padding: 1.5em;   
    $h-padding: 2em;
    $border-size: 1px; 

    #{$selector} {
        @include flexParent($display:inline-flex,$values:row nowrap);
        border-radius: 5px;
        border: $border-size solid transparent;
        padding: calc(#{$v-padding} - #{$border-size}) calc(#{$h-padding} - #{$border-size});
        font-size: 1rem;

        // TODO: make accessible
        // https://www.a11yproject.com/posts/2013-01-25-never-remove-css-outlines/
		&:focus {
			outline: none;
		}

		&:link,
		&:visited,
		&:hover,
		&:active {
			text-decoration: none;
		}

        &-label,
        &-icon {
            @include flexChild(0 1 auto);
        }

        &-icon {
            margin-left: 1em;
            height: $icon-size;
            width: $icon-size;
        }

        &:hover {
            cursor: pointer;
		}
    
    }

    @if $default != false {
		@include actionButton--default($selector,$color-primary,$color-secondary);
	}

}

/* -------------------------------------------------------------------------------
 Action Button: Default Presentation
---------------------------------------------------------------------------------- */
@mixin actionButton--default($selector,$color-primary,$color-secondary) {
    // Solid palette
    $solid-default-color: getColor('white');
    $solid-inactive-color: getColor('black',10);
    $solid-default-bg: getColor('red');
    $solid-inactive-bg: getColor('gray',10);
    // Ghost palette
    $ghost-default-color: $color-primary;
    $ghost-inactive-color: getColor('gray',10);
    $ghost-default-border: $color-primary;
    $ghost-hover-border: transparent;
    // Hover palette
    $hover-color: getColor('black',10);
    $hover-bg: getColor('yellow',10);

    #{$selector} {

        &--solid {
            background: $solid-default-bg;
            border-color: $solid-default-bg;
            color: $solid-default-color;

            &._is-inactive {
                background: $solid-inactive-bg;
                color: $solid-inactive-color;
            }

        }

        &--ghost {
            border-color: $ghost-default-border;
            color: $ghost-default-color;

            &._is-inactive {
                border-color: $ghost-inactive-color;
                color: $ghost-inactive-color;
            }

            &:hover {
                border-color: $ghost-hover-border;
            }

        }

        &-label {
            @include getType('action');
        }

        &-icon {
            
            #{$selector}--solid & {
                fill: $solid-default-color;
            }

            #{$selector}--solid._is-inactive & {
                fill: $solid-inactive-color;
            }

            #{$selector}--ghost & {
                fill: $ghost-default-color;
            }

            #{$selector}--ghost._is-inactive & {
                fill: $ghost-inactive-color;
            }

            #{$selector}:hover & {
                fill: $hover-color;
            }

        }

        &-trigger {  
            text-align: center;
            text-decoration: none;
        }

        &:hover {
            @include boxShadow(0,1px,5px,rgba($hover-color,.6));
            background: $hover-bg;
            color: $hover-color;
		}

    }

}

/* -------------------------------------------------------------------------------
 Action Link: Structure
 See templates/macros/_actions.html for markup
---------------------------------------------------------------------------------- */
@mixin actionLink($selector,$icon-size:20px,$default: true) {
    $border-size: 2px;

    #{$selector} {
        padding: 0.3em 0 0 0;
        font-size: 1rem;
        
        &:link,
		&:visited,
		&:hover,
		&:active {
			text-decoration: none;
		}

        &--hasicon {
            @include flexParent($display:inline-flex);
        }

        &-trigger {
            position: relative; 

            &::after {
                content: "";
                width: 100%;
                bottom: 0;
                left: 0;
                position: absolute;
                border-bottom: $border-size solid transparent;
            }
        
        }

        &-icon {
            @include flexChild();
            height: $icon-size;
            margin-left: 0.5em;
            width: $icon-size;
        }

    }

    @if $default != false {
		@include actionLink--default($selector);
	}

}

/* -------------------------------------------------------------------------------
 Action Link: Default Presentation
---------------------------------------------------------------------------------- */
@mixin actionLink--default($selector) {
    // Link palette
    $link-default-color: getColor('blue');
    $link-inactive-color: getColor('gray',10);
    $link-hover-color: getColor('black',10);
    $link-hover-bg: getColor('yellow',10);
    $link-shadow-color: getColor('black');
    // Border palette
    $border-default-color: getColor('blue');
    $border-inactive-color: getColor('gray',10);
    $border-hover-color: transparent;
    // Icon palette
    $icon-default-color: getColor('blue');
    $icon-inactive-color: getColor('gray',10);
    $icon-hover-color: getColor('black',10);

    #{$selector} {
        
        &:link,
        &:visited,
        &:hover,
        &:active {
            color: $link-default-color;
        }

        &._is-inactive {
            color: $link-inactive-color;
        }

        &-trigger {

            &::after {
                border-color: $border-default-color;
        
                #{$selector}._is-inactive & {
                    border-color: $border-inactive-color;
                }

                #{$selector}:hover & {
                    border-color: $border-hover-color;
                }

            }
        
        }

        &-icon {
            fill: $icon-default-color;

            #{$selector}._is-inactive & {
                fill: $icon-inactive-color;
            }

            #{$selector}:hover & {
                fill: $icon-hover-color;
            }

        }

        &:hover {
            @include boxShadow(0,1px,5px,rgba($link-shadow-color,.6));
            background: $link-hover-bg;
            color: $link-hover-color;
        }

    }

}

/* -------------------------------------------------------------------------------
 Action Icon: Structure
 See templates/macros/_actions.html for markup
---------------------------------------------------------------------------------- */
@mixin actionIcon($selector,$size:50px,$icon-size:30px,$default:true) {
    $border-size: 2px;

    #{$selector} {
        border-radius: 100%;
        height: $size;
        width: $size;
        padding: 0;
        font-size: 1rem;

        &-trigger {
            @include visuallyHide;
        }
        
        &-icon {
            height: $icon-size;
            width: $icon-size;
        }
        
        &--ghost {
            border: $border-size solid transparent;
        }

        &:hover {
			cursor: pointer;
		}
    
    }

    @if $default != false {
		@include actionIcon--default($selector);
	}

}

/* -------------------------------------------------------------------------------
 Action Icon: Default Presentation
---------------------------------------------------------------------------------- */
@mixin actionIcon-default($selector) {
    // Solid palette
    $solid-default-color: getColor('white');
    $solid-inactive-color: getColor('black',10);
    $solid-default-bg: getColor('red');
    $solid-inactive-bg: getColor('gray',10);
    // Ghost palette
    $ghost-default-color: getColor('red');
    $ghost-inactive-color: getColor('gray',10);
    $ghost-default-border: getColor('red');
    $ghost-hover-border: transparent;
    // Hover palette
    $hover-color: getColor('black',10);
    $hover-bg: getColor('yellow',10);

    #{$selector} {

        &--solid {
            background: $solid-default-bg;

            &._is-inactive {
                background: $solid-inactive-bg;
            }
        }

        &--ghost {
            border-color: $ghost-default-color;
            color: $ghost-default-color;

            &._is-inactive {
                border-color: $ghost-inactive-color;
            }

            &:hover {
                border-color: $ghost-hover-border;
            }
        }

        &-icon {
            
            #{$selector}--solid & {
                fill: $solid-default-color;
            }

            #{$selector}--solid._is-inactive & {
                fill: $solid-inactive-color;
            }

            #{$selector}--ghost & {
                fill: $ghost-default-color;
            }

            #{$selector}--ghost._is-inactive & {
                fill: $ghost-inactive-color;
            }

            #{$selector}:hover & {
                fill: $hover-color;
            }

        }

        &:hover {
            @include boxShadow(0,1px,5px,rgba($hover-color,.6)); 
			cursor: pointer;
            background: $hover-bg;
		}

    }

}